Practice_01 The first excercise in version control
8/15/2019

Use file manager to navigate to the place where your repository will be
right click
Select "Git Bash Here" this opens a command line where we will enter the version control commands
create a new file (a txt file is a good one to practice with)
go to the bash command window and type
$ git init - this adds the git application to the folder we are working
now add the new txt file to the local git repository by typing
$ git add - now the new file is connected to the git tools
now edit the text file. Add a few lines. Notepad++ is a good choice
when all done editing and ready to lock down, type
$git commit <filename> -m "note to explain changes and yout initials"
don't forget the -m it is easier to do it this way. Otherwise you get an awakward text editor to deal with
if you get that editor. you type the message at the top then :wq to exit out.
now your txt file is locked down in the local git repository
now it is time to send the file to the cloud or remote repository so others can access it.
to do do this type
$git push

 
in between steps, type
$git status 
to see what stage the files are in

to copy paste in the bash window, highlight the text to copy. Then place the cursor where you what to paste.
then press ctrl-shift-insert to paste.
This saves a lot of tpying

when starting new coding session you need to tell git who you are.
Since the computers are shared, we need to know who changed what.
So at first start up enter the following

$git congig --global user.name "Your Name"
$git config --global user.email "your.email@provider.com"

Detailed video on remotes
git merge upstream/master

David Mahler
Published on Mar 27, 2018
Introduction to Git - Remotes.
Twitter: @davidmahler
LinkedIn: https://www.linkedin.com/in/davidmahler

Introduction to Git - Core Concepts: https://youtu.be/uR6G2v_WsRA
Introduction to Git - Branching and Merging: https://youtu.be/FyAAIHHClqI

SSH key authentication in GitHub: https://help.github.com/articles/conn...
Pro Git Book by Scott Chacon: https://git-scm.com/book/en/v2

Commands used:
Retrieve/Clone a repo = git clone (URL)
List remotes = git remote (-v for detail)
Commit graph = git log --all --decorate --oneline --graph
Checkout a branch = git checkout
Create and checkout a branch = git checkout -b (branch name)
Retrieve/download from a remote = git fetch (remote name)
merge branch or tracking-branch = git merge (branch or tracking branch name)
Show status = git status
Upload to a remote = git push (remote name) (branch name)
stage an edit = git add (filename)
make a commit = git commit -m "description"
stage and commit = git commit -a -m "description"
List local branches = git branch
List remote branches = git branch -r
List both local and remote branches = git branch -a



https://www.youtube.com/watch?v=Gg4bLk8cGNo
 
There are a lot of online tutorials also.git 


--------------------------------------------------
Group 1
Name 1: Havisha Chiliveri
e-mail 1: cookiesRcool229@gmail.com

Name 2:Grant Raab
e-mail 2: graraab@dunapstudents.net

Name 3:
e-mail 3:










------------------------------------------------
Group 2
Name 1: Akhilesh Garipally 
e-mail 1L akhileshgaripally8@gmail.com

Name 2: Krishna Unnam
e-mail 2: krichaitu.unnam6@gmail.com



